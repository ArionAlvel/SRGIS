<!doctype html>
<html lang="es">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="Content-Type" content="text/html" charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>SRGIS Mapa de Alteraciones Hidrotermales</title>
        <meta name="description" content="meta-description.">
        <!--Estilo Mapa -->
        <link rel="stylesheet" href="style.css">
        <!--Mapbox js -->
        <link
            href="https://api.mapbox.com/mapbox-gl-js/v2.12.0/mapbox-gl.css"
            rel="stylesheet">
        <script src="https://api.mapbox.com/mapbox-gl-js/v2.12.0/mapbox-gl.js"></script>
        <!--Tipografías -->
        <link
            href="https://fonts.googleapis.com/css2?family=Ubuntu&display=swap"
            rel="stylesheet">
        <link
            href="https://fonts.googleapis.com/css2?family=Monda:wght@700&display=swap"
            rel="stylesheet">
        <link
            rel="stylesheet"
            href="https://fonts.googleapis.com/icon?family=Material+Icons">
        <!--Turf -->
        <script src="https://api.mapbox.com/mapbox.js/plugins/turf/v2.0.2/turf.min.js"></script>
        <!--JQuery-->
        <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
        <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
        <!--Gráfico <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>-->

        <!--Canva to html-->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script
            src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.5.0-beta4/html2canvas.js"></script>
        <!--Importador Kml-->
        <script
            src="https://cdn.jsdelivr.net/npm/@mapbox/togeojson@0.16.0/togeojson.js"></script>
        <!--Scripts dibujador de polígonos -->
        <script src="https://unpkg.com/@turf/turf@6/turf.min.js"></script>
        <script
            src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.2.2/mapbox-gl-draw.js"></script>
        <link
            rel="stylesheet"
            href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.2.2/mapbox-gl-draw.css"
            type="text/css">
        <!-- Geocoder -->
        <script
            src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js"></script>
        <link
            rel="stylesheet"
            href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css"
            type="text/css">
    </head>
    <body>
        <main>
            <!-- Mapas Base -->
            <div id="map"></div>
            <!-- Gráfico -->
            <!--<div id="popup" style="display: none"> <canvas id="chart"
            willreadfrequently="willReadFrequently"></canvas> </div>*/-->
            <!-- Exportar mapa -->
            <a id="downloadLink" href="" download="map.png">Download ↓</a>
            <div id="image"></div>
            <!-- Contenido -->
            <div class="Grilla">
                <div class="Instrucciones">
                    <a id="btn_Tuto" href="">!</a>
                    <div>
                        <h2>Controles</h2>
                        <p>Click izquierdo para desplazar el mapa, rueda para zoom y click derecho para
                            vista 3D.</p>
                    </div>
                </div>
                <div class="MapaBase">
                    <div class="Calc_area">
                        <div id="polygon_info">i</div>
                        <div id="calculated-area">
                            <p>Dibuja un polígono para calcular su área.<br><br>Borrar polígono</p>
                        </div>
                    </div>
                    <div class="C_MapaBase">
                        <!-- Cambio Mapa Base -->
                        <div id="menu">
                            <input
                                id="cl3ln6foa004b15l783jfr7cx"
                                type="radio"
                                name="rtoggle"
                                value="SRGIS"
                                checked="checked">
                            <label for="cl3ln6foa004b15l783jfr7cx">SRGIS</label>
                            <input
                                id="cl3ln5mx0000f15s69t8vyrkh"
                                type="radio"
                                name="rtoggle"
                                value="Satelite">
                            <label for="cl3ln5mx0000f15s69t8vyrkh">Satélite</label>
                            <input id="cl3oh9s8u000c14pgc3trxb6s" type="radio" name="rtoggle" value="Topo">
                            <label for="cl3oh9s8u000c14pgc3trxb6s">Topo</label>
                        </div>
                    </div>
                </div>
                <div class="Leyenda">
                    <div id="SideBar">
                        <div id="SideBarMenu">
                            <h2>ÍNDICES ESPECTRALES ASTER</h2>
                            <ul>
                                <li>
                                    <div id="lineamientos"></div>
                                    <p class="Line">Lineamientos</p>
                                </li>
                                <li>
                                    <button type="button" class="collapsible active">
                                        <h3>ASTER VNIR (<span id="slider-value3">100%</span>)</h3>
                                    </button>
                                    <ul class="content_C">
                                        <li>
                                            <input id="slider3" type="range" min="0" max="100" step="0" value="100">
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color: #FF0000"></div>
                                            <p class="fila">Ferrico +</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#6F0000"></div>
                                            <p class="fila">Ferrico -</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color: #00FF00"></div>
                                            <p class="fila">Ferroso +</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#008400"></div>
                                            <p class="fila">Ferroso -</p>
                                        </li>
                                    </ul>
                                </li>
                                <li>
                                    <button type="button" class="collapsible active">
                                        <h3>ASTER SWIR(<span id="slider-value2">100%</span>)</h3>
                                    </button>
                                    <ul class="content_C">
                                        <li>
                                            <input id="slider2" type="range" min="0" max="100" step="0" value="100">
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color: #27AE60"></div>
                                            <p class="fila">Propilítico</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#7B241C"></div>
                                            <p class="fila">Jarosita</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#BF40BF"></div>
                                            <p class="fila">Carbonatos</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#FF7F50"></div>
                                            <p class="fila">Argílica/Fílica</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#FFC000"></div>
                                            <p class="fila">Argílica Avanzada</p>
                                        </li>
                                    </ul>
                                </li>
                                <li>
                                    <button type="button" class="collapsible active">
                                        <h3>ASTER TIR (<span id="slider-value">100%</span>)</h3>
                                    </button>
                                    <ul class="content_C">
                                        <li>
                                            <input id="slider" type="range" min="0" max="100" step="0" value="100">
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#FF00FF"></div>
                                            <p class="fila">Carbonato +</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#800080"></div>
                                            <p class="fila">Carbonato -</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#1F51FF"></div>
                                            <p class="fila">Cuarzo +</p>
                                        </li>
                                        <li>
                                            <div class="cuadrado" style="background-color:#00008B"></div>
                                            <p class="fila">Cuarzo -</p>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                        <div id="SideBarText" onclick="SideBar_ShowHide();">LEYENDA</div>
                    </div>
                </div>
            </div>
            <div class="Panel_Info">
                <div id="features">
                    <p id="pd">Índice espectral:</p>
                </div>
            </div>
            <div class="Volar">
                <div id="main"></div>
            </div>
        </div>
        <div class="Cargar_Arch">
            <div class="box">
                <div class="hid-box">
                    <div id="icon_imp">
                        <i class="material-icons" style="float:right;font-size:20px">file_upload</i>Cargar archivo</div>
                    <input type="file" id="file_input" accept=".kml"/>
                    <p id="Intruc_load">Formato compatible: kml</p>
                </div>
            </div>
        </div>
        <div class="blank">
            <div id="circle"></div>
        </div>
        <div class="blank2">

            <div
                id="sidebar"
                class="absolute top-ml bottom right z1 w-full w300-ml px12 py12-ml events-none">
                <div
                    class="flex-parent flex-parent--column viewport-half h-auto-ml hmax-full bg-white round-ml shadow-darken10 events-all">
                    <div class="px12 py12">
                        <h3 class="txt-bold">
                            <span id="sidebar-title"></span>
                            <button id="resetButton" class="btn btn--s fr">Reset</button>
                        </h3>
                        <p id="sidebar-description" class="none block-mm py6"></p>
                        <div id="chart"></div>
                    </div>
                </div>
            </div>
            <div class="blank3"></div>
        </div>
    </main>

    <!--Importar poligono-->
    <script>
        'use strict';
        ////////Llamado mapa base/////////
        mapboxgl.accessToken = 'pk.eyJ1Ijoic3JnaXMiLCJhIjoiY2wzbHExNmF6MDhiYTNlbXltanJtbG1ldSJ9.RFNezhLR7Z9BYV' +
                'tfVOkahg';
        const map = new mapboxgl.Map({
            container: 'map', // container ID
            style: 'mapbox://styles/srgis/cl3ln6foa004b15l783jfr7cx?optimize=true', // style URL
            center: [
                -71, -34
            ], // starting position [lng, lat]
            zoom: 10, // starting zoom
            preserveDrawingBuffer: true,
            preventDefault: false
        });
        ////////Barra busqueda////////
        map.addControl(
            new MapboxGeocoder({accessToken: mapboxgl.accessToken, mapboxgl: mapboxgl})
        );
        ///////control de zoom///////
        var nav = new mapboxgl.NavigationControl({showCompass: true, showZoom: true});
        map.addControl(nav, "top-right");
        ///////Cambio de mapa base///////
        var layerList = document.getElementById('menu');
        var inputs = layerList.getElementsByTagName('input');

        /////////dibujar poligono////////
        const draw = new MapboxDraw({
            displayControlsDefault: false, //determina si se muestran controles
            controls: {
                polygon: true,
                trash: true
            },
            defaultMode: 'simple_select' //draw_polygon para iniciar dibujado
        });
        map.addControl(draw, 'top-left');
        map.on('draw.create', updateArea);
        map.on('draw.delete', updateArea);
        map.on('draw.update', updateArea);
        function updateArea(e) {
            const data = draw.getAll();
            const answer = document.getElementById('calculated-area');
            if (data.features.length > 0) {
                const area = turf.area(data);
                const rounded_area = Math.round(area / 10000) / 100; // Restrict the area to 2 decimal points.
                answer.innerHTML = `<p><strong>${rounded_area}</strong> Km<sup>2</sup><br><br>⇽Borrar polígono.</p>`;
            } else {
                answer.innerHTML = 'Dibuja un polígono para calcular su área.<br>⇽Borrar polígono.</br>';
                if (e.type !== 'draw.delete') 
                    alert('Has click para dibujar.');
                }
            }
        /////////ESCALA/////////
        map.addControl(new mapboxgl.ScaleControl({position: 'bottom-right'}));
        /////////CAPAS////////

        function addSource() { //Función principal

            // Aster TIR//
            map.addSource('AsterTIR', { //id para la funcion
                type: 'vector',
                url: 'mapbox://srgis.cf6bosyu/'
            });
            map.addLayer({
                'id': 'ASTER TIR', //id funcion add layer
                'type': 'fill',
                'source': 'AsterTIR', //id funcion addsource
                'source-layer': 'TIR-2es0qf', //nombre vector layer
                'minzoom': 3,
                'maxzoom': 0,
                'layout': {
                    'visibility': 'visible'
                },
                'paint': {
                    "fill-color": {
                        property: 'CLASS_NAME',
                        type: 'categorical',
                        stops: [
                            [
                                'Carbonato +', '#FF00FF'
                            ],
                            [
                                'Carbonato -', '#800080'
                            ],
                            [
                                'Cuarzo +', '#1F51FF'
                            ],
                            [
                                'Cuarzo -', '#00008B'
                            ]
                        ]
                    },
                    'fill-opacity': 0.6
                }
            });
            //Aster VNIR//
            map.addSource('AsterVNIR', { //id para la funcion
                type: 'vector',
                url: 'mapbox://srgis.92rokv2i/'
            });
            map.addLayer({
                'id': 'ASTER VNIR', //id funcion add layer
                'type': 'fill',
                'source': 'AsterVNIR', //id funcion addsource
                'source-layer': 'VNIR-abfvcs', //nombre vector layer
                'minzoom': 8,
                'maxzoom': 0,
                'layout': {
                    'visibility': 'visible'
                },
                'paint': {
                    "fill-color": {
                        property: 'CLASS_NAME',
                        type: 'categorical',
                        stops: [
                            [
                                'Férrico +', '#FF0000'
                            ],
                            [
                                'Férrico -', '#6F0000'
                            ],
                            [
                                'Ferroso +', '#00FF00'
                            ],
                            [
                                'Ferroso -', '#008400'
                            ]
                        ]
                    },
                    'fill-opacity': 0.6
                }
            });
            //Aster SWIR//
            map.addSource('AsterSWIR', { //id para la funcion
                type: 'vector',
                url: 'mapbox://srgis.bjmziz7k/'
            });
            map.addLayer({
                'id': 'ASTER SWIR', //id funcion add layer
                'type': 'fill',
                'source': 'AsterSWIR', //id funcion addsource
                'source-layer': 'SWIR-7slhva', //nombre vector layer
                'minzoom': 8,
                'maxzoom': 0,
                'layout': {
                    'visibility': 'visible'
                },
                'paint': {
                    "fill-color": {
                        property: 'CLASS_NAME',
                        type: 'categorical',
                        stops: [
                            [
                                'Propilítico', '#27AE60'
                            ],
                            [
                                'Jarosita', '#7B241C'
                            ],
                            [
                                'Carbonatos', '#BF40BF'
                            ],
                            [
                                'Argílica/Fílica', '#FF7F50'
                            ],
                            [
                                'Argílica Avanzada', '#FFC000'
                            ]
                        ]
                    },
                    'fill-opacity': 0.6
                }
            });
            //lineamientos//
            map.addSource('Estructuras', { //id para la funcion
                type: 'vector',
                url: 'mapbox://srgis.36126udf'
            });
            map.addLayer({
                'id': 'Lineamientos', //id funcion add layer
                'type': 'line',
                'source': 'Estructuras', //id funcion addsource
                'source-layer': 'FM-bt3zr2', //nombre vector layer
                'layout': {
                    'line-join': 'round',
                    'line-cap': 'round'
                },
                'paint': {
                    'line-color': '#000019',
                    'line-width': 1.8,
                    'line-dasharray': [2, 3]
                }
            });

            ///////CONTROL DE TRANSPARENCIA///////
            const slider = document.getElementById('slider');
            const sliderValue = document.getElementById('slider-value');
            const slider2 = document.getElementById('slider2');
            const sliderValue2 = document.getElementById('slider-value2');
            const slider3 = document.getElementById('slider3');
            const sliderValue3 = document.getElementById('slider-value3');
            slider.addEventListener('input', (e) => {
                map.setPaintProperty(
                    'ASTER TIR',
                    'fill-opacity',
                    parseInt(e.target.value, 10) / 100,
                );
                //Value indicator
                sliderValue.textContent = e.target.value + '%';
                //Ocultar en 0
                if (sliderValue.innerHTML == '0%') {
                    map.setLayoutProperty('ASTER TIR', 'visibility', 'none');
                } else {
                    map.setLayoutProperty('ASTER TIR', 'visibility', 'visible');
                }
            });
            slider2.addEventListener('input', (e) => {
                map.setPaintProperty(
                    'ASTER SWIR',
                    'fill-opacity',
                    parseInt(e.target.value, 10) / 100,
                );
                //Value indicator
                sliderValue2.textContent = e.target.value + '%';
                //Ocultar en 0
                if (sliderValue2.innerHTML === '0%') {
                    map.setLayoutProperty('ASTER SWIR', 'visibility', 'none');
                } else {
                    map.setLayoutProperty('ASTER SWIR', 'visibility', 'visible');
                }
            });
            slider3.addEventListener('input', (e) => {
                map.setPaintProperty(
                    'ASTER VNIR',
                    'fill-opacity',
                    parseInt(e.target.value, 10) / 100,
                );
                //Value indicator
                sliderValue3.textContent = e.target.value + '%';
                //Ocultar en 0
                if (sliderValue3.innerHTML === '0%') {
                    map.setLayoutProperty('ASTER VNIR', 'visibility', 'none');
                } else {
                    map.setLayoutProperty('ASTER VNIR', 'visibility', 'visible');
                }
            });
            // Cambia info en capas
            map.on('mousemove', (event) => {
                const states2 = map.queryRenderedFeatures(event.point, {
                    layers: ['ASTER VNIR', 'ASTER SWIR', 'ASTER TIR']
                });
                document
                    .getElementById('pd')
                    .innerHTML = states2.length
                        ? `<h3 class='infoI'>Índice espectral: ${states2[0]
                            .properties
                            .CLASS_NAME}</h3>
            <p class='subinfoI'>${states2[0]
                            .properties
                            .MXS}</p>`
                        : `<p>Índice espectral:</p>`;
            });

            //////Gráfico////// Agregar la capa de puntos al mapa
            map.addSource('puntosRadarS', {
                type: 'vector',
                url: 'mapbox://srgis.5p2q0jl7'
            });

            // Actualizar el código de color para los puntos
            var valores = Object
                .values(properties)
                .slice(1);
            var promedio = valores.reduce((a, b) => a + b) / valores.length;

            var colorScale = [
                [
                    0, '#4B0082'
                ],
                [
                    10, '#0000FF'
                ],
                [
                    20, '#1E90FF'
                ],
                [
                    30, '#00BFFF'
                ],
                [
                    40, '#00FF00'
                ],
                [
                    50, '#9ACD32'
                ],
                [
                    60, '#FFFF00'
                ],
                [
                    70, '#FFA500'
                ],
                [
                    80, '#FF0000'
                ],
                [
                    90, '#800000'
                ]
            ];

            var color = '#000000'; // Color por defecto para evitar errores

            for (var i = 0; i < colorScale.length; i++) {
                if (promedio >= colorScale[i][0]) {
                    color = colorScale[i][1];
                } else {
                    break;
                }
            }

            // Agregar el color al objeto properties
            properties.color = color;

            // Modificar la capa para usar la propiedad 'color' en lugar de un color fijo
            map.addLayer({
                id: 'puntosRadar',
                type: 'circle',
                source: 'puntosRadarS',
                'source-layer': 'ps-1rz791',
                paint: {
                    'circle-radius': {
                        base: 1.75,
                        stops: [
                            [
                                12, 2
                            ],
                            [
                                22, 180
                            ]
                        ]
                    },
                    'circle-color': [
                        'get', 'color'
                    ],
                    'circle-opacity': 0.8
                }
            });

            // Modificar la función 'createChart' para que reciba los datos del punto
            // seleccionado
            function createChart(properties) {
                var labels = [
                    "Ene 2020",
                    "Ene 2020",
                    "Feb 2020",
                    "Feb 2020",
                    "Mar 2020",
                    "Mar 2020",
                    "Abr 2020",
                    "Abr 2020",
                    "Abr 2020",
                    "May 2020",
                    "May 2020",
                    "May 2020",
                    "Jun 2020",
                    "Jun 2020",
                    "Jul 2020",
                    "Jul 2020",
                    "Jul 2020",
                    "Ago 2020",
                    "Ago 2020",
                    "Ago 2020",
                    "Ago 2020",
                    "Ago 2020",
                    "Ago 2020",
                    "Sept 2020",
                    "Sept 2020",
                    "Sept 2020",
                    "Sept 2020",
                    "Oct 2020",
                    "Oct 2020",
                    "Oct 2020",
                    "Oct 2020",
                    "Nov 2020",
                    "Nov 2020",
                    "Nov 2020",
                    "Dic 2020",
                    "Dic 2020",
                    "Dic 2020",
                    "Dic 2020",
                    "Ene 2021",
                    "Ene 2021",
                    "Ene 2021",
                    "Feb 2021",
                    "Feb 2021",
                    "Feb 2021",
                    "Feb 2021",
                    "Feb 2021",
                    "Mar 2021",
                    "Mar 2021",
                    "Mar 2021",
                    "Mar 2021",
                    "Mar 2021",
                    "Abr 2021",
                    "Abr 2021",
                    "Abr 2021",
                    "Abr 2021",
                    "Abr 2021",
                    "May 2021",
                    "May 2021",
                    "May 2021"
                ]; // Reemplazar con las fechas correspondientes
                var values = [
                    data.D_20200108,
                    data.D_20200120,
                    data.D_20200201,
                    data.D_20200213,
                    data.D_20200308,
                    data.D_20200320,
                    data.D_20200401,
                    data.D_20200413,
                    data.D_20200425,
                    data.D_20200507,
                    data.D_20200519,
                    data.D_20200531,
                    data.D_20200612,
                    data.D_20200624,
                    data.D_20200706,
                    data.D_20200718,
                    data.D_20200730,
                    data.D_20200805,
                    data.D_20200805,
                    data.D_20200811,
                    data.D_20200817,
                    data.D_20200823,
                    data.D_20200829,
                    data.D_20200904,
                    data.D_20200910,
                    data.D_20200916,
                    data.D_20200928,
                    data.D_20201004,
                    data.D_20201010,
                    data.D_20201016,
                    data.D_20201022,
                    data.D_20201103,
                    data.D_20201115,
                    data.D_20201127,
                    data.D_20201209,
                    data.D_20201215,
                    data.D_20201221,
                    data.D_20201227,
                    data.D_20210102,
                    data.D_20210114,
                    data.D_20210126,
                    data.D_20210201,
                    data.D_20210207,
                    data.D_20210213,
                    data.D_20210219,
                    data.D_20210225,
                    data.D_20210303,
                    data.D_20210309,
                    data.D_20210315,
                    data.D_20210321,
                    data.D_20210327,
                    data.D_20210402,
                    data.D_20210408,
                    data.D_20210414,
                    data.D_20210420,
                    data.D_20210426,
                    data.D_20210502,
                    data.D_20210514,
                    data.D_20210526
                ]; // Reemplazar con los valores correspondientes

                // Crear el contenedor del gráfico y ajustar su ancho y alto en píxeles
                var chartContainer = document.createElement('div');
                chartContainer.style.width = '500px';
                chartContainer.style.height = '300px';

                // Crear el canvas del gráfico y ajustar su ancho y alto en función del ancho y
                // alto de la pantalla
                var chartCanvas = document.createElement('canvas');
                chartCanvas.width = (window.innerWidth * 0.7);
                chartCanvas.height = (window.innerHeight * 0.5);
                chartContainer.appendChild(chartCanvas);

                // Calcular la línea de tendencia
                var trendline = new Chart
                    .Math
                    .regression('linear', labels.map((_, i) => ({x: i, y: values[i]})))
                    .points;

                var chart = new Chart(chartCanvas, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: 'Desplazamiento',
                                data: values,
                                backgroundColor: 'rgba(204,102,0,0.2)',
                                borderColor: 'rgba(204,102,0,1)',
                                borderWidth: 1
                            }, {
                                label: 'Línea de tendencia',
                                data: trendline,
                                fill: false,
                                borderColor: 'rgba(0, 0, 0, 0.5)',
                                borderWidth: 1,
                                pointRadius: 0,
                                pointHitRadius: 5
                            }
                        ]
                    },
                    options: {
                        legend: {
                            display: true // Ocultar la leyenda del gráfico
                        },
                        scales: {
                            yAxes: [
                                {
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Desplazamiento (m)'
                                    },
                                    ticks: {
                                        beginAtZero: true,
                                        suggestedMin: 10,
                                        stepSize: 4,
                                        callback: function (value, index, values) {
                                            return value/* + 'm'*/;
                                        }
                                    },
                                    gridLines: {
                                        drawBorder: false
                                    },
                                    height: 300 // Ajustar el alto del eje y en píxeles
                                }
                            ],
                            xAxes: [
                                {
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Fecha'
                                    },
                                    ticks: {
                                        autoSkip: true,
                                        stepSize: 20
                                    },
                                    gridLines: {
                                        drawBorder: false
                                    },
                                    width: 500 // Ajustar el ancho del eje x en píxeles
                                }
                            ]
                        }
                    }
                });
                return chartContainer;
            }

            // Agregar listener para mostrar el gráfico al hacer clic en un punto
            map.on('click', 'puntosRadar', function (e) {
                // Obtener las propiedades del punto seleccionado
                var properties = e
                    .features[0]
                    .properties;

                // Crear el gráfico con los datos del punto seleccionado y la línea de tendencia
                var chartContainer = createChart(properties);

                // Agregar el contenedor del gráfico al body del documento
                document
                    .body
                    .appendChild(chartContainer);
            });

            // Mostrar el cursor como un puntero al pasar sobre los puntos
            map.on('mouseenter', 'puntosRadar', function () {
                map
                    .getCanvas()
                    .style
                    .cursor = 'pointer';
            });

            // Cambiar el cursor a su valor por defecto al salir de los puntos
            map.on('mouseleave', 'puntosRadar', function () {
                map
                    .getCanvas()
                    .style
                    .cursor = '';
            });

            ////////Cambio mapa base////////
            var kmlSourceName = 'polygon';
            var kmlLayerName = 'polygon';

            function addKMLLayer(map, kml) {
                var features = toGeoJSON
                    .kml(
                        (new DOMParser()).parseFromString(kml, 'text/xml')
                    )
                    .features;
                var polygon = features.find(function (feature) {
                    return feature.geometry.type === 'Polygon';
                });

                addPolygonToMap(map, polygon, kmlSourceName, kmlLayerName); // añadir a mapa principal
            }

            function switchLayer(layer) {
                var layerId = layer.target.id;
                // Remove KML layer and source
                if (map.getLayer(kmlLayerName)) {
                    map.removeLayer(kmlLayerName);
                }
                if (map.getSource(kmlSourceName)) {
                    map.removeSource(kmlSourceName);
                }
                map.setStyle('mapbox://styles/srgis/' + layerId);
                // Re-add KML layer and source
                map.on('style.load', function () {
                    addSource();
                    addLayer();
                    if (kmlLayerName === 'polygon') {
                        handleFileSelect(); // Volver a agregar el archivo KML al mapa
                    }
                });
            }

            for (var i = 0; i < inputs.length; i++) {
                inputs[i].onclick = switchLayer;
            }

            // Función que maneja la selección del archivo KML
            var kmlInput = document.getElementById('file_input');
            kmlInput.addEventListener('change', handleFileSelect);

            function handleFileSelect(event) {
                var file = event
                    .target
                    .files[0];
                var reader = new FileReader();
                reader.addEventListener('load', function (e) {
                    // Eliminar la capa anterior si existe en el mapa principal
                    if (map.getLayer(kmlLayerName)) {
                        map.removeLayer(kmlLayerName);
                        map.removeSource(kmlSourceName);
                    }
                    var kml = e.target.result;
                    addKMLLayer(map, kml); // Añadir capa KML al mapa
                });
                reader.readAsText(file);
            }

        }; //Fin función principal
        map.on('style.load', function () {
            addSource();
            addLayer();

        });

        ///////SideBar////////
        /* Show-hide the SideBar */
        function SideBar_ShowHide() {
            var _sb = document.getElementById("SideBar");/* Get SideBar object */
            var _width = '200px';/* SideBar width */

            if (_sb.style.width == _width) {
                _sb.style.width = '0px';/* Hide SideBar */
                return;
            }
            _sb.style.width = _width;/* Show SideBar */
        };
        //collapsible
        const collapsible = document.getElementsByClassName("collapsible");
        for (let i = 0; i < collapsible.length; i++) {
            collapsible[i].addEventListener(
                "click",
                e => e.currentTarget.classList.toggle("active")
            );
        }
        ///////////////Imprimir mapa//////////////////
        $(document).ready(function (e) {
            $('#downloadLink').click(function () {
                var mapCanvas = map.getCanvas();
                var body = $('body'); // Obtener instancia del body
                html2canvas(body, { // Agregar al objeto html2canvas
                    allowTaint: true,
                    dpi: 190,
                    useCORS: true,
                    logging: true,
                    onrendered: function (interfaceCanvas) {
                        var mapCanvas = map.getCanvas(); // Obtener instancia del canvas del mapa
                        canvas.width = mapCanvas.width; // Ajustar ancho de la interfaz al ancho del mapa
                        canvas.height = mapCanvas.height; // Ajustar alto de la interfaz al alto del mapa
                        var combinedCanvas = mergeCanvases(mapCanvas, interfaceCanvas);
                        var imgData = combinedCanvas.toDataURL('image/png', 1.0);
                        var link = document.createElement('a');
                        link.href = imgData;
                        link.download = "captura-pagina.png";
                        document
                            .body
                            .appendChild(link);
                        link.click();
                        document
                            .body
                            .removeChild(link);
                    }
                });
                return false;
            });
            function mergeCanvases(canvas1, canvas2) {
                var combinedCanvas = document.createElement('canvas');
                combinedCanvas.width = Math.max(canvas1.width, canvas2.width);
                combinedCanvas.height = Math.max(canvas1.height, canvas2.height);
                var ctx = combinedCanvas.getContext('2d');
                ctx.drawImage(canvas1, 0, 0);
                ctx.drawImage(canvas2, 0, 0);
                return combinedCanvas;
            }
        });
        ///////Poligono importado///////
        function addPolygonToMap(mapInstance, polygon) {
            if (!polygon) {
                return alert('El archivo KML no contiene un polígono válido.');
            }

            mapInstance.addSource('polygon', {
                type: 'geojson',
                data: polygon
            });

            mapInstance.addLayer({
                id: 'polygon',
                type: 'fill',
                source: 'polygon',
                paint: {
                    'fill-color': '#088',
                    'fill-opacity': 0.8
                }
            });

            // ajustar vista del mapa principal
            if (polygon) {
                map.fitBounds(turf.bbox(polygon), {padding: 20});
            }
        }

        map.on('load', function () {
            //KML IMPORTADO// Añadir un input para seleccionar el archivo KML
            var kmlData;
            var input = document.getElementById('file_input');
            input.addEventListener('change', handleFileSelect);
            // llama a handleFileSelect después de que el mapa cargue

            handleFileSelect(document.getElementById('file-input').files[0]);

        });
    </script>
</body>
</html>
